# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: python-libzim

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
    - name: Update repositories
      run: |
        echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

        apt-get update -y && \
        apt-get install -y --no-install-recommends locales && \
        apt-get clean -y && \
        rm -rf /var/lib/apt/lists/*

    - name: Set Language
      run: |
        export LANG="en_US.UTF-8"
        export LANGUAGE="en_US:en"
        export LC_ALL="en_US.UTF-8"
        locale-gen en_US.UTF-8

    - name: Install library compilation dependencies
      run: |
        apt-get update -y && \
        apt-get install -y --no-install-recommends git tar xz-utils pkg-config libtool automake autoconf make g++ liblzma-dev coreutils meson ninja-build wget zlib1g-dev libicu-dev libgumbo-dev libmagic-dev ca-certificates && \
        apt-get clean -y && \
        rm -rf /var/lib/apt/lists/*
        update-ca-certificates

    - name: Install Xapian
      run: |
        wget -N https://oligarchy.co.uk/xapian/1.4.14/xapian-core-1.4.14.tar.xz

        tar xvf xapian-core-1.4.14.tar.xz
        cd xapian-core-1.4.14 && ./configure
        make all install
        cd ..
        rm -rf xapian

    - name: Clone libzim
      run: |
        git clone https://github.com/openzim/libzim.git libzim-C++

    - name: Compile libzim
      run: |
        cd libzim-C++ && git checkout 6.0.2
        meson . build
        ninja -C build install
        cd ..
        rm -rf libzim-C++
        ldconfig
        export LD_LIBRARY_PATH="/usr/local/lib/x86_64-linux-gnu/""

    - name: Install Python development dependencies
      run: |
        apt-get update -y && \
        apt-get install -y --no-install-recommends python-dev python3-dev python3-pip && \
        apt-get clean -y && \
        rm -rf /var/lib/apt/lists/*

    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Cython

    - name: Compile libzim python extension
      run: |
        python setup.py build_ext -i

    - name: Autoformat with black
      run: |
        pip install black
        black .
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
